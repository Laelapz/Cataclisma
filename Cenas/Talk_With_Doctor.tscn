[gd_scene load_steps=16 format=2]

[ext_resource path="res://Scripts/Talk With_Doctor.gd" type="Script" id=1]
[ext_resource path="res://Assets/MadScientist-sheet.png" type="Texture" id=2]
[ext_resource path="res://Assets/Reporter-sheet.png" type="Texture" id=3]

[sub_resource type="AtlasTexture" id=1]
atlas = ExtResource( 2 )
region = Rect2( 0, 0, 24, 24 )

[sub_resource type="AtlasTexture" id=2]
atlas = ExtResource( 2 )
region = Rect2( 24, 0, 24, 24 )

[sub_resource type="AtlasTexture" id=3]
atlas = ExtResource( 2 )
region = Rect2( 48, 0, 24, 24 )

[sub_resource type="AtlasTexture" id=4]
atlas = ExtResource( 2 )
region = Rect2( 72, 0, 24, 24 )

[sub_resource type="SpriteFrames" id=5]
animations = [ {
"frames": [ SubResource( 1 ), SubResource( 2 ), SubResource( 3 ), SubResource( 4 ) ],
"loop": true,
"name": "fala",
"speed": 14.0
} ]

[sub_resource type="AtlasTexture" id=6]
atlas = ExtResource( 3 )
region = Rect2( 0, 0, 24, 24 )

[sub_resource type="AtlasTexture" id=7]
atlas = ExtResource( 3 )
region = Rect2( 24, 0, 24, 24 )

[sub_resource type="AtlasTexture" id=8]
atlas = ExtResource( 3 )
region = Rect2( 48, 0, 24, 24 )

[sub_resource type="AtlasTexture" id=9]
atlas = ExtResource( 3 )
region = Rect2( 72, 0, 24, 24 )

[sub_resource type="SpriteFrames" id=10]
animations = [ {
"frames": [ SubResource( 6 ), SubResource( 7 ), SubResource( 8 ), SubResource( 9 ) ],
"loop": true,
"name": "fala",
"speed": 14.0
} ]

[sub_resource type="Shader" id=11]
code = "// HSV to RBG from https://www.rapidtables.com/convert/color/hsv-to-rgb.html
// Rotation matrix from https://en.wikipedia.org/wiki/Rotation_matrix

shader_type canvas_item;

const float PI = 3.1415926535;

uniform float strength: hint_range(0., 1.) = 0.5;
uniform float speed: hint_range(0., 10.) = 0.5;
uniform float angle: hint_range(0., 360.) = 0.;

void fragment() {
	float hue = UV.x * cos(radians(angle)) - UV.y * sin(radians(angle));
	hue = fract(hue + fract(TIME  * speed));
	float x = 1. - abs(mod(hue / (1./ 6.), 2.) - 1.);
	vec3 rainbow;
	if(hue < 1./6.){
		rainbow = vec3(1., x, 0.);
	} else if (hue < 1./3.) {
		rainbow = vec3(x, 1., 0);
	} else if (hue < 0.5) {
		rainbow = vec3(0, 1., x);
	} else if (hue < 2./3.) {
		rainbow = vec3(0., x, 1.);
	} else if (hue < 5./6.) {
		rainbow = vec3(x, 0., 1.);
	} else {
		rainbow = vec3(1., 0., x);
	}
	vec4 color = texture(TEXTURE, UV);
	COLOR = mix(color, vec4(rainbow, color.a), strength);
}"

[sub_resource type="ShaderMaterial" id=12]
shader = SubResource( 11 )
shader_param/strength = 1.0
shader_param/speed = 0.1
shader_param/angle = 0.0

[node name="Talk With_Doctor" type="CanvasLayer"]
script = ExtResource( 1 )

[node name="Background" type="ColorRect" parent="."]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 1
color = Color( 0.2, 0.2, 0.2, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Doc" type="AnimatedSprite" parent="Background"]
visible = false
position = Vector2( 242.171, 585.817 )
scale = Vector2( 16, 16 )
frames = SubResource( 5 )
animation = "fala"

[node name="Reporter" type="AnimatedSprite" parent="Background"]
position = Vector2( 747.695, 576.698 )
scale = Vector2( 16, 16 )
frames = SubResource( 10 )
animation = "fala"
flip_h = true

[node name="FalaTimer" type="Timer" parent="Background"]
wait_time = 0.5
one_shot = true

[node name="ColorRect" type="ColorRect" parent="."]
visible = false
show_behind_parent = true
material = SubResource( 12 )
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 1
color = Color( 0, 0, 0, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Tween" type="Tween" parent="."]

[connection signal="timeout" from="Background/FalaTimer" to="." method="_on_FalaTimer_timeout"]
[connection signal="tween_completed" from="Tween" to="." method="_on_Tween_tween_completed"]
